/* 思路：此题只需要按照题目要求即可，判断每一位平方只和是否为1即可，此题最为关键的就是要避免无限循环的情况比如对于
 4 → 16 → 37 → 58 → 89 → 145 → 42 → 20 → 4 。所以我们需要记录该数字是否已经存在过了。
 对于保留唯一的数字，我们可以采用map（映射）或者set（集合）的数据结构（都是基于红黑树进行实现，效率接近），
 对于只需要储存唯一的值，我们可以优先采用set，如果对于我们输出键值对也就是该值还对应其他东西我们就可以采用map的方式。
 所以只用把每次出现的值放入到set集合中即可，这样每次都在集合中判断是否已经存在，如果存在就出现了循环。*/
class Solution {
public:
	bool isHappy(int n) {
		unordered_set<int> s;//set的一种相似数据结构，内部无需，效率更高
		int sum = 0;
		while (n != 1)
		{
			s.insert(n);
			sum = 0;
			while (n != 0)
			{
				sum += (n % 10)*(n % 10);
				n /= 10;
			}
			n = sum;
			if (s.count(n) != 0) return false;
		}
		return true;
	}
};